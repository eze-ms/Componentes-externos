{"ast":null,"code":"var _jsxFileName = \"/Users/ezequielmacchi1/MAUI-1/src/componentes/Editor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from \"react-router-dom\";\nimport { nuevaPeli, leerPelicula, actualizarPelicula } from '../redux/actions/actionsTypes';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, TextField } from '@mui/material';\nimport './Editor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Editor(props) {\n  _s();\n  const navigate = useNavigate();\n  let {\n    id\n  } = useParams();\n  const initialValues = {\n    nuevoTitulo: '',\n    nuevoAnyoEstreno: '',\n    mensaje: '',\n    director: ''\n  };\n  const [formValues, setFormValues] = useState(initialValues);\n  const esNueva = () => {\n    return id == undefined;\n  };\n  useEffect(() => {\n    console.log(\"ID de la película:\", id);\n\n    // si la pelicula del editor no es nueva, tenemos que cargarla desde redux\n    if (!esNueva()) {\n      props.leerPeli(id);\n      const datosPeli = props.datos.editable;\n      setFormValues({\n        nuevoTitulo: datosPeli.titulo,\n        nuevoAnyoEstreno: datosPeli.anyoEstreno,\n        mensaje: datosPeli.mensaje,\n        director: datosPeli.director\n      });\n    } else {\n      setFormValues(initialValues);\n    }\n  }, []);\n\n  //console.log(props.datos);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const datosPelicula = {\n      titulo: formValues.nuevoTitulo,\n      anyoEstreno: parseInt(formValues.nuevoAnyoEstreno),\n      mensaje: formValues.mensaje,\n      director: formValues.director\n    };\n    if (esNueva()) {\n      // creamos una pelicula nueva\n      props.nuevaPelicula(datosPelicula);\n    } else {\n      // actualizamos la pelicula\n      props.actualizarPeli(id, datosPelicula);\n    }\n    navigate('/peliculas'); // Redirección a la página de películas\n  };\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues({\n      ...formValues,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-textField\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-textField\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"nuevoTitulo\",\n          name: \"nuevoTitulo\",\n          label: \"T\\xEDtulo\",\n          variant: \"outlined\",\n          type: \"text\",\n          value: formValues.nuevoTitulo // Establecer el valor del TextField\n          ,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-textField\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"nuevoAnyoEstreno\",\n          label: \"A\\xF1o de Estreno\",\n          variant: \"outlined\",\n          type: \"text\",\n          name: \"nuevoAnyoEstreno\",\n          value: formValues.nuevoAnyoEstreno,\n          onChange: handleInputChange,\n          required: true,\n          pattern: \"[0-9]*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-textField\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"mensaje\",\n          label: \"Sinopsis\",\n          variant: \"outlined\",\n          name: \"mensaje\" // Propiedad name\n          ,\n          multiline: true // Para permitir varias líneas\n          ,\n          rows: 7 // Número de filas\n          ,\n          placeholder: \"Escriba la sinopsis aqu\\xED...\",\n          value: formValues.mensaje,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-textField\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Director\",\n          variant: \"outlined\",\n          type: \"text\",\n          id: \"director\",\n          name: \"director\",\n          value: formValues.director,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"custom-button\",\n        color: \"primary\",\n        variant: \"outlined\",\n        type: \"submit\",\n        children: \"A\\xF1adir Pel\\xEDcula\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(Editor, \"nQtm0BDz+tLxo4lW9HMeUr3tj34=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Editor;\nfunction mapStateToProps(estado, props) {\n  return {\n    datos: estado\n  };\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    nuevaPelicula: peli => dispatch(nuevaPeli(peli)),\n    leerPeli: id => dispatch(leerPelicula(id)),\n    actualizarPeli: (id, pelicula) => dispatch(actualizarPelicula(id, pelicula))\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Editor);\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useEffect","useState","connect","useParams","nuevaPeli","leerPelicula","actualizarPelicula","useNavigate","Button","TextField","jsxDEV","_jsxDEV","Editor","props","_s","navigate","id","initialValues","nuevoTitulo","nuevoAnyoEstreno","mensaje","director","formValues","setFormValues","esNueva","undefined","console","log","leerPeli","datosPeli","datos","editable","titulo","anyoEstreno","handleSubmit","e","preventDefault","datosPelicula","parseInt","nuevaPelicula","actualizarPeli","handleInputChange","name","value","target","onSubmit","children","className","label","variant","type","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","pattern","multiline","rows","placeholder","color","_c","mapStateToProps","estado","mapDispatchToProps","dispatch","peli","pelicula","$RefreshReg$"],"sources":["/Users/ezequielmacchi1/MAUI-1/src/componentes/Editor.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from \"react-router-dom\";\nimport { nuevaPeli, leerPelicula, actualizarPelicula } from '../redux/actions/actionsTypes';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, TextField  } from '@mui/material';\nimport './Editor.css';\n\nfunction Editor(props) {\n  const navigate = useNavigate();\n  let { id } = useParams();\n  const initialValues = {\n    nuevoTitulo: '',\n    nuevoAnyoEstreno: '',\n    mensaje: '',\n    director: '',\n  };\n\n  const [formValues, setFormValues] = useState(initialValues);  \n\n  const esNueva = () => {\n    return (id == undefined);\n  }\n\n  useEffect(()=>{\n    console.log(\"ID de la película:\", id);\n\n    // si la pelicula del editor no es nueva, tenemos que cargarla desde redux\n    if (!esNueva()) {\n      props.leerPeli(id);\n\n      const datosPeli = props.datos.editable;\n      setFormValues({\n        nuevoTitulo: datosPeli.titulo,\n        nuevoAnyoEstreno: datosPeli.anyoEstreno,\n        mensaje: datosPeli.mensaje,\n        director: datosPeli.director,      \n      })  \n    } else {\n      setFormValues(initialValues);\n    }\n\n  }, []);\n\n  \n  //console.log(props.datos);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const datosPelicula = {\n      titulo: formValues.nuevoTitulo,\n      anyoEstreno: parseInt(formValues.nuevoAnyoEstreno),\n      mensaje: formValues.mensaje,\n      director: formValues.director,\n    };\n\n    if (esNueva()) {\n      // creamos una pelicula nueva\n      props.nuevaPelicula(datosPelicula);\n    } else {\n      // actualizamos la pelicula\n      props.actualizarPeli(id, datosPelicula);\n    }\n\n    navigate('/peliculas'); // Redirección a la página de películas\n  };  \n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues({...formValues,[name]: value,});\n  };  \n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className = 'container-textField'>\n        <div className='custom-textField'>\n          <TextField \n            id=\"nuevoTitulo\" \n            name=\"nuevoTitulo\"\n            label=\"Título\" \n            variant=\"outlined\" \n            type=\"text\"\n            value={formValues.nuevoTitulo} // Establecer el valor del TextField\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div className='custom-textField'>\n          <TextField \n            id=\"nuevoAnyoEstreno\" \n            label=\"Año de Estreno\" \n            variant=\"outlined\"\n            type=\"text\"\n            name=\"nuevoAnyoEstreno\"\n            value={formValues.nuevoAnyoEstreno}\n            onChange={handleInputChange}\n            required\n            pattern=\"[0-9]*\"\n          />\n        </div>\n        <div className='custom-textField'>\n          <TextField \n            id=\"mensaje\" \n            label=\"Sinopsis\"\n            variant=\"outlined\"\n            name=\"mensaje\" // Propiedad name\n            multiline // Para permitir varias líneas\n            rows={7} // Número de filas\n            placeholder=\"Escriba la sinopsis aquí...\"\n            value={formValues.mensaje}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div className='custom-textField'>\n          <TextField \n            id=\"outlined-basic\" \n            label=\"Director\" \n            variant=\"outlined\" \n            type=\"text\"\n            id=\"director\"\n            name=\"director\"\n            value={formValues.director}\n            onChange={handleInputChange}\n          />\n        </div>\n        <Button \n          className = 'custom-button'\n          color='primary' \n          variant='outlined' \n          type=\"submit\" >Añadir Película\n        </Button>\n      </div>\n    </form>\n  );\n}\n\nfunction mapStateToProps(estado, props) {\n  return {\n    datos: estado,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    nuevaPelicula: (peli) => dispatch(nuevaPeli(peli)),\n    leerPeli: (id) => dispatch(leerPelicula(id)),\n    actualizarPeli: (id, pelicula) => dispatch(actualizarPelicula(id, pelicula)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Editor);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}